/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202309

import (
	"encoding/json"
	"github.com/Jaya-Pratama-Teknik-Group/tts-go-sdk/utils"
)

// checks if the Product202309GetProductResponseDataSkusCombinedSkus type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202309GetProductResponseDataSkusCombinedSkus{}

// Product202309GetProductResponseDataSkusCombinedSkus struct for Product202309GetProductResponseDataSkusCombinedSkus
type Product202309GetProductResponseDataSkusCombinedSkus struct {
	Brand *Product202309GetProductResponseDataSkusCombinedSkusBrand `json:"brand,omitempty"`
	// The category tree information of the source product included in the virtual bundle.
	Categories []Product202309GetProductResponseDataSkusCombinedSkusCategories `json:"categories,omitempty"`
	// The reasons linked to the source product included in the virtual bundle that are keeping the virtual bundle status from being live. Possible values: - SUB_PRODUCT_DEACTIVATE: Indicate the source product has been deactivated. - SUB_PRODUCT_DELETE: Indicate the source product has been deleted. - SUB_PRODUCT_FROZEN: Indicate the source product has been frozen. - SUB_SKU_DELETE: Indicate the source SKU has been deleted.  - SUB_PRODUCT_CATEGORY_FIRST_LEVEL_ERROR: Indicate the level one category of the virtual bundle does not match that of the source product.  - SUB_PRODUCT_CATEGORY_OVER_RESTRICTION:  Indicate the level one category of the source product is not in the set of restricted categories.
	CombinedListingNotLiveReasons []string `json:"combined_listing_not_live_reasons,omitempty"`
	// Source SKU inventory details.
	Inventory []Product202309GetProductResponseDataSkusCombinedSkusInventory `json:"inventory,omitempty"`
	Price     *Product202309GetProductResponseDataSkusCombinedSkusPrice      `json:"price,omitempty"`
	// The ID of the source product included in the virtual bundle.
	ProductId        *string                                                              `json:"product_id,omitempty"`
	ProductMainImage *Product202309GetProductResponseDataSkusCombinedSkusProductMainImage `json:"product_main_image,omitempty"`
	// A list of attributes  (e.g. size, color, length) that define the source SKU.
	SalesAttributes []Product202309GetProductResponseDataSkusCombinedSkusSalesAttributes `json:"sales_attributes,omitempty"`
	// An internal code/name for managing the source SKU, not visible to buyers.
	SellerSku *string `json:"seller_sku,omitempty"`
	// The quantity of the source SKU included in the virtual bundle.
	SkuCount *int32 `json:"sku_count,omitempty"`
	// The ID of the source SKU included in the virtual bundle.
	SkuId *string `json:"sku_id,omitempty"`
	// The title of the source product included in the virtual bundle.
	Title                *string `json:"title,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Product202309GetProductResponseDataSkusCombinedSkus Product202309GetProductResponseDataSkusCombinedSkus

// NewProduct202309GetProductResponseDataSkusCombinedSkus instantiates a new Product202309GetProductResponseDataSkusCombinedSkus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202309GetProductResponseDataSkusCombinedSkus() *Product202309GetProductResponseDataSkusCombinedSkus {
	this := Product202309GetProductResponseDataSkusCombinedSkus{}
	return &this
}

// NewProduct202309GetProductResponseDataSkusCombinedSkusWithDefaults instantiates a new Product202309GetProductResponseDataSkusCombinedSkus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202309GetProductResponseDataSkusCombinedSkusWithDefaults() *Product202309GetProductResponseDataSkusCombinedSkus {
	this := Product202309GetProductResponseDataSkusCombinedSkus{}
	return &this
}

// GetBrand returns the Brand field value if set, zero value otherwise.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetBrand() Product202309GetProductResponseDataSkusCombinedSkusBrand {
	if o == nil || utils.IsNil(o.Brand) {
		var ret Product202309GetProductResponseDataSkusCombinedSkusBrand
		return ret
	}
	return *o.Brand
}

// GetBrandOk returns a tuple with the Brand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetBrandOk() (*Product202309GetProductResponseDataSkusCombinedSkusBrand, bool) {
	if o == nil || utils.IsNil(o.Brand) {
		return nil, false
	}
	return o.Brand, true
}

// HasBrand returns a boolean if a field has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) HasBrand() bool {
	if o != nil && !utils.IsNil(o.Brand) {
		return true
	}

	return false
}

// SetBrand gets a reference to the given Product202309GetProductResponseDataSkusCombinedSkusBrand and assigns it to the Brand field.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) SetBrand(v Product202309GetProductResponseDataSkusCombinedSkusBrand) {
	o.Brand = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetCategories() []Product202309GetProductResponseDataSkusCombinedSkusCategories {
	if o == nil || utils.IsNil(o.Categories) {
		var ret []Product202309GetProductResponseDataSkusCombinedSkusCategories
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetCategoriesOk() ([]Product202309GetProductResponseDataSkusCombinedSkusCategories, bool) {
	if o == nil || utils.IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) HasCategories() bool {
	if o != nil && !utils.IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []Product202309GetProductResponseDataSkusCombinedSkusCategories and assigns it to the Categories field.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) SetCategories(v []Product202309GetProductResponseDataSkusCombinedSkusCategories) {
	o.Categories = v
}

// GetCombinedListingNotLiveReasons returns the CombinedListingNotLiveReasons field value if set, zero value otherwise.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetCombinedListingNotLiveReasons() []string {
	if o == nil || utils.IsNil(o.CombinedListingNotLiveReasons) {
		var ret []string
		return ret
	}
	return o.CombinedListingNotLiveReasons
}

// GetCombinedListingNotLiveReasonsOk returns a tuple with the CombinedListingNotLiveReasons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetCombinedListingNotLiveReasonsOk() ([]string, bool) {
	if o == nil || utils.IsNil(o.CombinedListingNotLiveReasons) {
		return nil, false
	}
	return o.CombinedListingNotLiveReasons, true
}

// HasCombinedListingNotLiveReasons returns a boolean if a field has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) HasCombinedListingNotLiveReasons() bool {
	if o != nil && !utils.IsNil(o.CombinedListingNotLiveReasons) {
		return true
	}

	return false
}

// SetCombinedListingNotLiveReasons gets a reference to the given []string and assigns it to the CombinedListingNotLiveReasons field.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) SetCombinedListingNotLiveReasons(v []string) {
	o.CombinedListingNotLiveReasons = v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetInventory() []Product202309GetProductResponseDataSkusCombinedSkusInventory {
	if o == nil || utils.IsNil(o.Inventory) {
		var ret []Product202309GetProductResponseDataSkusCombinedSkusInventory
		return ret
	}
	return o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetInventoryOk() ([]Product202309GetProductResponseDataSkusCombinedSkusInventory, bool) {
	if o == nil || utils.IsNil(o.Inventory) {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) HasInventory() bool {
	if o != nil && !utils.IsNil(o.Inventory) {
		return true
	}

	return false
}

// SetInventory gets a reference to the given []Product202309GetProductResponseDataSkusCombinedSkusInventory and assigns it to the Inventory field.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) SetInventory(v []Product202309GetProductResponseDataSkusCombinedSkusInventory) {
	o.Inventory = v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetPrice() Product202309GetProductResponseDataSkusCombinedSkusPrice {
	if o == nil || utils.IsNil(o.Price) {
		var ret Product202309GetProductResponseDataSkusCombinedSkusPrice
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetPriceOk() (*Product202309GetProductResponseDataSkusCombinedSkusPrice, bool) {
	if o == nil || utils.IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) HasPrice() bool {
	if o != nil && !utils.IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given Product202309GetProductResponseDataSkusCombinedSkusPrice and assigns it to the Price field.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) SetPrice(v Product202309GetProductResponseDataSkusCombinedSkusPrice) {
	o.Price = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetProductId() string {
	if o == nil || utils.IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetProductIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) HasProductId() bool {
	if o != nil && !utils.IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) SetProductId(v string) {
	o.ProductId = &v
}

// GetProductMainImage returns the ProductMainImage field value if set, zero value otherwise.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetProductMainImage() Product202309GetProductResponseDataSkusCombinedSkusProductMainImage {
	if o == nil || utils.IsNil(o.ProductMainImage) {
		var ret Product202309GetProductResponseDataSkusCombinedSkusProductMainImage
		return ret
	}
	return *o.ProductMainImage
}

// GetProductMainImageOk returns a tuple with the ProductMainImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetProductMainImageOk() (*Product202309GetProductResponseDataSkusCombinedSkusProductMainImage, bool) {
	if o == nil || utils.IsNil(o.ProductMainImage) {
		return nil, false
	}
	return o.ProductMainImage, true
}

// HasProductMainImage returns a boolean if a field has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) HasProductMainImage() bool {
	if o != nil && !utils.IsNil(o.ProductMainImage) {
		return true
	}

	return false
}

// SetProductMainImage gets a reference to the given Product202309GetProductResponseDataSkusCombinedSkusProductMainImage and assigns it to the ProductMainImage field.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) SetProductMainImage(v Product202309GetProductResponseDataSkusCombinedSkusProductMainImage) {
	o.ProductMainImage = &v
}

// GetSalesAttributes returns the SalesAttributes field value if set, zero value otherwise.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetSalesAttributes() []Product202309GetProductResponseDataSkusCombinedSkusSalesAttributes {
	if o == nil || utils.IsNil(o.SalesAttributes) {
		var ret []Product202309GetProductResponseDataSkusCombinedSkusSalesAttributes
		return ret
	}
	return o.SalesAttributes
}

// GetSalesAttributesOk returns a tuple with the SalesAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetSalesAttributesOk() ([]Product202309GetProductResponseDataSkusCombinedSkusSalesAttributes, bool) {
	if o == nil || utils.IsNil(o.SalesAttributes) {
		return nil, false
	}
	return o.SalesAttributes, true
}

// HasSalesAttributes returns a boolean if a field has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) HasSalesAttributes() bool {
	if o != nil && !utils.IsNil(o.SalesAttributes) {
		return true
	}

	return false
}

// SetSalesAttributes gets a reference to the given []Product202309GetProductResponseDataSkusCombinedSkusSalesAttributes and assigns it to the SalesAttributes field.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) SetSalesAttributes(v []Product202309GetProductResponseDataSkusCombinedSkusSalesAttributes) {
	o.SalesAttributes = v
}

// GetSellerSku returns the SellerSku field value if set, zero value otherwise.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetSellerSku() string {
	if o == nil || utils.IsNil(o.SellerSku) {
		var ret string
		return ret
	}
	return *o.SellerSku
}

// GetSellerSkuOk returns a tuple with the SellerSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetSellerSkuOk() (*string, bool) {
	if o == nil || utils.IsNil(o.SellerSku) {
		return nil, false
	}
	return o.SellerSku, true
}

// HasSellerSku returns a boolean if a field has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) HasSellerSku() bool {
	if o != nil && !utils.IsNil(o.SellerSku) {
		return true
	}

	return false
}

// SetSellerSku gets a reference to the given string and assigns it to the SellerSku field.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) SetSellerSku(v string) {
	o.SellerSku = &v
}

// GetSkuCount returns the SkuCount field value if set, zero value otherwise.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetSkuCount() int32 {
	if o == nil || utils.IsNil(o.SkuCount) {
		var ret int32
		return ret
	}
	return *o.SkuCount
}

// GetSkuCountOk returns a tuple with the SkuCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetSkuCountOk() (*int32, bool) {
	if o == nil || utils.IsNil(o.SkuCount) {
		return nil, false
	}
	return o.SkuCount, true
}

// HasSkuCount returns a boolean if a field has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) HasSkuCount() bool {
	if o != nil && !utils.IsNil(o.SkuCount) {
		return true
	}

	return false
}

// SetSkuCount gets a reference to the given int32 and assigns it to the SkuCount field.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) SetSkuCount(v int32) {
	o.SkuCount = &v
}

// GetSkuId returns the SkuId field value if set, zero value otherwise.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetSkuId() string {
	if o == nil || utils.IsNil(o.SkuId) {
		var ret string
		return ret
	}
	return *o.SkuId
}

// GetSkuIdOk returns a tuple with the SkuId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetSkuIdOk() (*string, bool) {
	if o == nil || utils.IsNil(o.SkuId) {
		return nil, false
	}
	return o.SkuId, true
}

// HasSkuId returns a boolean if a field has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) HasSkuId() bool {
	if o != nil && !utils.IsNil(o.SkuId) {
		return true
	}

	return false
}

// SetSkuId gets a reference to the given string and assigns it to the SkuId field.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) SetSkuId(v string) {
	o.SkuId = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetTitle() string {
	if o == nil || utils.IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) GetTitleOk() (*string, bool) {
	if o == nil || utils.IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) HasTitle() bool {
	if o != nil && !utils.IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Product202309GetProductResponseDataSkusCombinedSkus) SetTitle(v string) {
	o.Title = &v
}

func (o Product202309GetProductResponseDataSkusCombinedSkus) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Product202309GetProductResponseDataSkusCombinedSkus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.Brand) {
		toSerialize["brand"] = o.Brand
	}
	if !utils.IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	if !utils.IsNil(o.CombinedListingNotLiveReasons) {
		toSerialize["combined_listing_not_live_reasons"] = o.CombinedListingNotLiveReasons
	}
	if !utils.IsNil(o.Inventory) {
		toSerialize["inventory"] = o.Inventory
	}
	if !utils.IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !utils.IsNil(o.ProductId) {
		toSerialize["product_id"] = o.ProductId
	}
	if !utils.IsNil(o.ProductMainImage) {
		toSerialize["product_main_image"] = o.ProductMainImage
	}
	if !utils.IsNil(o.SalesAttributes) {
		toSerialize["sales_attributes"] = o.SalesAttributes
	}
	if !utils.IsNil(o.SellerSku) {
		toSerialize["seller_sku"] = o.SellerSku
	}
	if !utils.IsNil(o.SkuCount) {
		toSerialize["sku_count"] = o.SkuCount
	}
	if !utils.IsNil(o.SkuId) {
		toSerialize["sku_id"] = o.SkuId
	}
	if !utils.IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Product202309GetProductResponseDataSkusCombinedSkus) UnmarshalJSON(data []byte) (err error) {
	varProduct202309GetProductResponseDataSkusCombinedSkus := _Product202309GetProductResponseDataSkusCombinedSkus{}

	err = json.Unmarshal(data, &varProduct202309GetProductResponseDataSkusCombinedSkus)

	if err != nil {
		return err
	}

	*o = Product202309GetProductResponseDataSkusCombinedSkus(varProduct202309GetProductResponseDataSkusCombinedSkus)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "brand")
		delete(additionalProperties, "categories")
		delete(additionalProperties, "combined_listing_not_live_reasons")
		delete(additionalProperties, "inventory")
		delete(additionalProperties, "price")
		delete(additionalProperties, "product_id")
		delete(additionalProperties, "product_main_image")
		delete(additionalProperties, "sales_attributes")
		delete(additionalProperties, "seller_sku")
		delete(additionalProperties, "sku_count")
		delete(additionalProperties, "sku_id")
		delete(additionalProperties, "title")
		o.AdditionalProperties = additionalProperties
	}
	return err
}

type NullableProduct202309GetProductResponseDataSkusCombinedSkus struct {
	value *Product202309GetProductResponseDataSkusCombinedSkus
	isSet bool
}

func (v NullableProduct202309GetProductResponseDataSkusCombinedSkus) Get() *Product202309GetProductResponseDataSkusCombinedSkus {
	return v.value
}

func (v *NullableProduct202309GetProductResponseDataSkusCombinedSkus) Set(val *Product202309GetProductResponseDataSkusCombinedSkus) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202309GetProductResponseDataSkusCombinedSkus) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202309GetProductResponseDataSkusCombinedSkus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202309GetProductResponseDataSkusCombinedSkus(val *Product202309GetProductResponseDataSkusCombinedSkus) *NullableProduct202309GetProductResponseDataSkusCombinedSkus {
	return &NullableProduct202309GetProductResponseDataSkusCombinedSkus{value: val, isSet: true}
}

func (v NullableProduct202309GetProductResponseDataSkusCombinedSkus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202309GetProductResponseDataSkusCombinedSkus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
