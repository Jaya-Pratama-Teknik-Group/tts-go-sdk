/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package product_v202309

import (
    "encoding/json"
    "github.com/Jaya-Pratama-Teknik-Group/tts-go-sdk/utils"
)

            // checks if the Product202309GetProductResponseDataSkusCombinedSkusBrand type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Product202309GetProductResponseDataSkusCombinedSkusBrand{}

// Product202309GetProductResponseDataSkusCombinedSkusBrand struct for Product202309GetProductResponseDataSkusCombinedSkusBrand
type Product202309GetProductResponseDataSkusCombinedSkusBrand struct {
    // The ID of the brand of  the source product included in the virtual bundle.
    Id *string `json:"id,omitempty"`
    // The brand name of the source product included in the virtual bundle.
    Name *string `json:"name,omitempty"`
    AdditionalProperties map[string]interface{}
}

type _Product202309GetProductResponseDataSkusCombinedSkusBrand Product202309GetProductResponseDataSkusCombinedSkusBrand

// NewProduct202309GetProductResponseDataSkusCombinedSkusBrand instantiates a new Product202309GetProductResponseDataSkusCombinedSkusBrand object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProduct202309GetProductResponseDataSkusCombinedSkusBrand() *Product202309GetProductResponseDataSkusCombinedSkusBrand {
    this := Product202309GetProductResponseDataSkusCombinedSkusBrand{}
    return &this
}

// NewProduct202309GetProductResponseDataSkusCombinedSkusBrandWithDefaults instantiates a new Product202309GetProductResponseDataSkusCombinedSkusBrand object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProduct202309GetProductResponseDataSkusCombinedSkusBrandWithDefaults() *Product202309GetProductResponseDataSkusCombinedSkusBrand {
    this := Product202309GetProductResponseDataSkusCombinedSkusBrand{}
    return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Product202309GetProductResponseDataSkusCombinedSkusBrand) GetId() string {
    if o == nil || utils.IsNil(o.Id) {
        var ret string
        return ret
    }
    return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkusBrand) GetIdOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Id) {
        return nil, false
    }
    return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkusBrand) HasId() bool {
    if o != nil && !utils.IsNil(o.Id) {
        return true
    }

    return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Product202309GetProductResponseDataSkusCombinedSkusBrand) SetId(v string) {
    o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Product202309GetProductResponseDataSkusCombinedSkusBrand) GetName() string {
    if o == nil || utils.IsNil(o.Name) {
        var ret string
        return ret
    }
    return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkusBrand) GetNameOk() (*string, bool) {
    if o == nil || utils.IsNil(o.Name) {
        return nil, false
    }
    return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Product202309GetProductResponseDataSkusCombinedSkusBrand) HasName() bool {
    if o != nil && !utils.IsNil(o.Name) {
        return true
    }

    return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Product202309GetProductResponseDataSkusCombinedSkusBrand) SetName(v string) {
    o.Name = &v
}

func (o Product202309GetProductResponseDataSkusCombinedSkusBrand) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Product202309GetProductResponseDataSkusCombinedSkusBrand) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.Id) {
        toSerialize["id"] = o.Id
    }
    if !utils.IsNil(o.Name) {
        toSerialize["name"] = o.Name
    }

    for key, value := range o.AdditionalProperties {
        toSerialize[key] = value
    }

    return toSerialize, nil
}

func (o *Product202309GetProductResponseDataSkusCombinedSkusBrand) UnmarshalJSON(data []byte) (err error) {
    varProduct202309GetProductResponseDataSkusCombinedSkusBrand := _Product202309GetProductResponseDataSkusCombinedSkusBrand{}

    err = json.Unmarshal(data, &varProduct202309GetProductResponseDataSkusCombinedSkusBrand)

    if err != nil {
        return err
    }

    *o = Product202309GetProductResponseDataSkusCombinedSkusBrand(varProduct202309GetProductResponseDataSkusCombinedSkusBrand)

    additionalProperties := make(map[string]interface{})

    if err = json.Unmarshal(data, &additionalProperties); err == nil {
        delete(additionalProperties, "id")
        delete(additionalProperties, "name")
        o.AdditionalProperties = additionalProperties
    }
    return err
}

type NullableProduct202309GetProductResponseDataSkusCombinedSkusBrand struct {
	value *Product202309GetProductResponseDataSkusCombinedSkusBrand
	isSet bool
}

func (v NullableProduct202309GetProductResponseDataSkusCombinedSkusBrand) Get() *Product202309GetProductResponseDataSkusCombinedSkusBrand {
	return v.value
}

func (v *NullableProduct202309GetProductResponseDataSkusCombinedSkusBrand) Set(val *Product202309GetProductResponseDataSkusCombinedSkusBrand) {
	v.value = val
	v.isSet = true
}

func (v NullableProduct202309GetProductResponseDataSkusCombinedSkusBrand) IsSet() bool {
	return v.isSet
}

func (v *NullableProduct202309GetProductResponseDataSkusCombinedSkusBrand) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProduct202309GetProductResponseDataSkusCombinedSkusBrand(val *Product202309GetProductResponseDataSkusCombinedSkusBrand) *NullableProduct202309GetProductResponseDataSkusCombinedSkusBrand {
	return &NullableProduct202309GetProductResponseDataSkusCombinedSkusBrand{value: val, isSet: true}
}

func (v NullableProduct202309GetProductResponseDataSkusCombinedSkusBrand) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProduct202309GetProductResponseDataSkusCombinedSkusBrand) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


