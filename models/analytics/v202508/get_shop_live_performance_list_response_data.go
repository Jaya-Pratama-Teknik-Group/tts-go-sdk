/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package analytics_v202508

import (
	"encoding/json"
	"github.com/Jaya-Pratama-Teknik-Group/tts-go-sdk/utils"
)

// checks if the Analytics202508GetShopLIVEPerformanceListResponseData type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Analytics202508GetShopLIVEPerformanceListResponseData{}

// Analytics202508GetShopLIVEPerformanceListResponseData struct for Analytics202508GetShopLIVEPerformanceListResponseData
type Analytics202508GetShopLIVEPerformanceListResponseData struct {
	// Latest date in local timezone where data is ready (ISO 8601 format).
	LatestAvailableDate *string `json:"latest_available_date,omitempty"`
	// List of live performance metrics.
	LiveStreamSessions []Analytics202508GetShopLIVEPerformanceListResponseDataLiveStreamSessions `json:"live_stream_sessions,omitempty"`
	// Page token for the next page request.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// Total number of LIVE stream sessions.
	TotalCount           *int64 `json:"total_count,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Analytics202508GetShopLIVEPerformanceListResponseData Analytics202508GetShopLIVEPerformanceListResponseData

// NewAnalytics202508GetShopLIVEPerformanceListResponseData instantiates a new Analytics202508GetShopLIVEPerformanceListResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalytics202508GetShopLIVEPerformanceListResponseData() *Analytics202508GetShopLIVEPerformanceListResponseData {
	this := Analytics202508GetShopLIVEPerformanceListResponseData{}
	return &this
}

// NewAnalytics202508GetShopLIVEPerformanceListResponseDataWithDefaults instantiates a new Analytics202508GetShopLIVEPerformanceListResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalytics202508GetShopLIVEPerformanceListResponseDataWithDefaults() *Analytics202508GetShopLIVEPerformanceListResponseData {
	this := Analytics202508GetShopLIVEPerformanceListResponseData{}
	return &this
}

// GetLatestAvailableDate returns the LatestAvailableDate field value if set, zero value otherwise.
func (o *Analytics202508GetShopLIVEPerformanceListResponseData) GetLatestAvailableDate() string {
	if o == nil || utils.IsNil(o.LatestAvailableDate) {
		var ret string
		return ret
	}
	return *o.LatestAvailableDate
}

// GetLatestAvailableDateOk returns a tuple with the LatestAvailableDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Analytics202508GetShopLIVEPerformanceListResponseData) GetLatestAvailableDateOk() (*string, bool) {
	if o == nil || utils.IsNil(o.LatestAvailableDate) {
		return nil, false
	}
	return o.LatestAvailableDate, true
}

// HasLatestAvailableDate returns a boolean if a field has been set.
func (o *Analytics202508GetShopLIVEPerformanceListResponseData) HasLatestAvailableDate() bool {
	if o != nil && !utils.IsNil(o.LatestAvailableDate) {
		return true
	}

	return false
}

// SetLatestAvailableDate gets a reference to the given string and assigns it to the LatestAvailableDate field.
func (o *Analytics202508GetShopLIVEPerformanceListResponseData) SetLatestAvailableDate(v string) {
	o.LatestAvailableDate = &v
}

// GetLiveStreamSessions returns the LiveStreamSessions field value if set, zero value otherwise.
func (o *Analytics202508GetShopLIVEPerformanceListResponseData) GetLiveStreamSessions() []Analytics202508GetShopLIVEPerformanceListResponseDataLiveStreamSessions {
	if o == nil || utils.IsNil(o.LiveStreamSessions) {
		var ret []Analytics202508GetShopLIVEPerformanceListResponseDataLiveStreamSessions
		return ret
	}
	return o.LiveStreamSessions
}

// GetLiveStreamSessionsOk returns a tuple with the LiveStreamSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Analytics202508GetShopLIVEPerformanceListResponseData) GetLiveStreamSessionsOk() ([]Analytics202508GetShopLIVEPerformanceListResponseDataLiveStreamSessions, bool) {
	if o == nil || utils.IsNil(o.LiveStreamSessions) {
		return nil, false
	}
	return o.LiveStreamSessions, true
}

// HasLiveStreamSessions returns a boolean if a field has been set.
func (o *Analytics202508GetShopLIVEPerformanceListResponseData) HasLiveStreamSessions() bool {
	if o != nil && !utils.IsNil(o.LiveStreamSessions) {
		return true
	}

	return false
}

// SetLiveStreamSessions gets a reference to the given []Analytics202508GetShopLIVEPerformanceListResponseDataLiveStreamSessions and assigns it to the LiveStreamSessions field.
func (o *Analytics202508GetShopLIVEPerformanceListResponseData) SetLiveStreamSessions(v []Analytics202508GetShopLIVEPerformanceListResponseDataLiveStreamSessions) {
	o.LiveStreamSessions = v
}

// GetNextPageToken returns the NextPageToken field value if set, zero value otherwise.
func (o *Analytics202508GetShopLIVEPerformanceListResponseData) GetNextPageToken() string {
	if o == nil || utils.IsNil(o.NextPageToken) {
		var ret string
		return ret
	}
	return *o.NextPageToken
}

// GetNextPageTokenOk returns a tuple with the NextPageToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Analytics202508GetShopLIVEPerformanceListResponseData) GetNextPageTokenOk() (*string, bool) {
	if o == nil || utils.IsNil(o.NextPageToken) {
		return nil, false
	}
	return o.NextPageToken, true
}

// HasNextPageToken returns a boolean if a field has been set.
func (o *Analytics202508GetShopLIVEPerformanceListResponseData) HasNextPageToken() bool {
	if o != nil && !utils.IsNil(o.NextPageToken) {
		return true
	}

	return false
}

// SetNextPageToken gets a reference to the given string and assigns it to the NextPageToken field.
func (o *Analytics202508GetShopLIVEPerformanceListResponseData) SetNextPageToken(v string) {
	o.NextPageToken = &v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *Analytics202508GetShopLIVEPerformanceListResponseData) GetTotalCount() int64 {
	if o == nil || utils.IsNil(o.TotalCount) {
		var ret int64
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Analytics202508GetShopLIVEPerformanceListResponseData) GetTotalCountOk() (*int64, bool) {
	if o == nil || utils.IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *Analytics202508GetShopLIVEPerformanceListResponseData) HasTotalCount() bool {
	if o != nil && !utils.IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int64 and assigns it to the TotalCount field.
func (o *Analytics202508GetShopLIVEPerformanceListResponseData) SetTotalCount(v int64) {
	o.TotalCount = &v
}

func (o Analytics202508GetShopLIVEPerformanceListResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Analytics202508GetShopLIVEPerformanceListResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !utils.IsNil(o.LatestAvailableDate) {
		toSerialize["latest_available_date"] = o.LatestAvailableDate
	}
	if !utils.IsNil(o.LiveStreamSessions) {
		toSerialize["live_stream_sessions"] = o.LiveStreamSessions
	}
	if !utils.IsNil(o.NextPageToken) {
		toSerialize["next_page_token"] = o.NextPageToken
	}
	if !utils.IsNil(o.TotalCount) {
		toSerialize["total_count"] = o.TotalCount
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Analytics202508GetShopLIVEPerformanceListResponseData) UnmarshalJSON(data []byte) (err error) {
	varAnalytics202508GetShopLIVEPerformanceListResponseData := _Analytics202508GetShopLIVEPerformanceListResponseData{}

	err = json.Unmarshal(data, &varAnalytics202508GetShopLIVEPerformanceListResponseData)

	if err != nil {
		return err
	}

	*o = Analytics202508GetShopLIVEPerformanceListResponseData(varAnalytics202508GetShopLIVEPerformanceListResponseData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "latest_available_date")
		delete(additionalProperties, "live_stream_sessions")
		delete(additionalProperties, "next_page_token")
		delete(additionalProperties, "total_count")
		o.AdditionalProperties = additionalProperties
	}
	return err
}

type NullableAnalytics202508GetShopLIVEPerformanceListResponseData struct {
	value *Analytics202508GetShopLIVEPerformanceListResponseData
	isSet bool
}

func (v NullableAnalytics202508GetShopLIVEPerformanceListResponseData) Get() *Analytics202508GetShopLIVEPerformanceListResponseData {
	return v.value
}

func (v *NullableAnalytics202508GetShopLIVEPerformanceListResponseData) Set(val *Analytics202508GetShopLIVEPerformanceListResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalytics202508GetShopLIVEPerformanceListResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalytics202508GetShopLIVEPerformanceListResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalytics202508GetShopLIVEPerformanceListResponseData(val *Analytics202508GetShopLIVEPerformanceListResponseData) *NullableAnalytics202508GetShopLIVEPerformanceListResponseData {
	return &NullableAnalytics202508GetShopLIVEPerformanceListResponseData{value: val, isSet: true}
}

func (v NullableAnalytics202508GetShopLIVEPerformanceListResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalytics202508GetShopLIVEPerformanceListResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
