/*
tiktok shop openapi

sdk for apis

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package analytics_v202508

import (
    "encoding/json"
    "github.com/Jaya-Pratama-Teknik-Group/tts-go-sdk/utils"
)

            // checks if the Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance type satisfies the MappedNullable interface at compile time
var _ utils.MappedNullable = &Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance{}

// Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance struct for Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance
type Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance struct {
    // Same structure as \"intervals.\" It contains data for the previous time range with the same range length and granularity of the current time range. For example, if the current time range (represented in start_time_ge and end_time_lt) is from 2024-09-01 to 2024-09-08, with granularity \"ALL\", the comparison_intervals will contain data from 2024-08-25 to 2024-09-01 with granularity \"ALL\"
    ComparisonIntervals []Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformanceComparisonIntervals `json:"comparison_intervals,omitempty"`
    // Interval data for the requested time range. The time range of each interval is determined by the granularity.
    Intervals []Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformanceIntervals `json:"intervals,omitempty"`
    AdditionalProperties map[string]interface{}
}

type _Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance

// NewAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance instantiates a new Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance() *Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance {
    this := Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance{}
    return &this
}

// NewAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformanceWithDefaults instantiates a new Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformanceWithDefaults() *Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance {
    this := Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance{}
    return &this
}

// GetComparisonIntervals returns the ComparisonIntervals field value if set, zero value otherwise.
func (o *Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) GetComparisonIntervals() []Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformanceComparisonIntervals {
    if o == nil || utils.IsNil(o.ComparisonIntervals) {
        var ret []Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformanceComparisonIntervals
        return ret
    }
    return o.ComparisonIntervals
}

// GetComparisonIntervalsOk returns a tuple with the ComparisonIntervals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) GetComparisonIntervalsOk() ([]Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformanceComparisonIntervals, bool) {
    if o == nil || utils.IsNil(o.ComparisonIntervals) {
        return nil, false
    }
    return o.ComparisonIntervals, true
}

// HasComparisonIntervals returns a boolean if a field has been set.
func (o *Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) HasComparisonIntervals() bool {
    if o != nil && !utils.IsNil(o.ComparisonIntervals) {
        return true
    }

    return false
}

// SetComparisonIntervals gets a reference to the given []Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformanceComparisonIntervals and assigns it to the ComparisonIntervals field.
func (o *Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) SetComparisonIntervals(v []Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformanceComparisonIntervals) {
    o.ComparisonIntervals = v
}

// GetIntervals returns the Intervals field value if set, zero value otherwise.
func (o *Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) GetIntervals() []Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformanceIntervals {
    if o == nil || utils.IsNil(o.Intervals) {
        var ret []Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformanceIntervals
        return ret
    }
    return o.Intervals
}

// GetIntervalsOk returns a tuple with the Intervals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) GetIntervalsOk() ([]Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformanceIntervals, bool) {
    if o == nil || utils.IsNil(o.Intervals) {
        return nil, false
    }
    return o.Intervals, true
}

// HasIntervals returns a boolean if a field has been set.
func (o *Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) HasIntervals() bool {
    if o != nil && !utils.IsNil(o.Intervals) {
        return true
    }

    return false
}

// SetIntervals gets a reference to the given []Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformanceIntervals and assigns it to the Intervals field.
func (o *Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) SetIntervals(v []Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformanceIntervals) {
    o.Intervals = v
}

func (o Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) MarshalJSON() ([]byte, error) {
    toSerialize,err := o.ToMap()
    if err != nil {
        return []byte{}, err
    }
    return json.Marshal(toSerialize)
}

func (o Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) ToMap() (map[string]interface{}, error) {
    toSerialize := map[string]interface{}{}
    if !utils.IsNil(o.ComparisonIntervals) {
        toSerialize["comparison_intervals"] = o.ComparisonIntervals
    }
    if !utils.IsNil(o.Intervals) {
        toSerialize["intervals"] = o.Intervals
    }

    for key, value := range o.AdditionalProperties {
        toSerialize[key] = value
    }

    return toSerialize, nil
}

func (o *Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) UnmarshalJSON(data []byte) (err error) {
    varAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance := _Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance{}

    err = json.Unmarshal(data, &varAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance)

    if err != nil {
        return err
    }

    *o = Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance(varAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance)

    additionalProperties := make(map[string]interface{})

    if err = json.Unmarshal(data, &additionalProperties); err == nil {
        delete(additionalProperties, "comparison_intervals")
        delete(additionalProperties, "intervals")
        o.AdditionalProperties = additionalProperties
    }
    return err
}

type NullableAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance struct {
	value *Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance
	isSet bool
}

func (v NullableAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) Get() *Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance {
	return v.value
}

func (v *NullableAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) Set(val *Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance(val *Analytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) *NullableAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance {
	return &NullableAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance{value: val, isSet: true}
}

func (v NullableAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalytics202508GetShopLIVEPerformanceOverviewResponseDataPerformance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


